[1,["269hnaLd1Ak6BMxQnE6GNB"],["_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_states","_defines","_props"],0,12]],[[0,0,1,2,4],[1,0,1,2,3,4]],[[[[0,"../shader/mapFrozen",[{"hash":204054019,"name":"../shader/mapFrozen|2dvs:vert|2dfs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1},{"name":"fillColor","type":16,"count":1},{"name":"frozenProgress","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1},{"name":"fillColor","type":16,"count":1},{"name":"frozenProgress","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nuniform sampler2D cc_spriteTexture;\nin vec2 uv0;\nvec4 getCol();\nvec4 getSnowEffect();\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n  vec4 fillColor;\n  float frozenProgress;\n};\nvec4 frag () {\n  vec4 col = getCol();\n  #if USE_SNOW_EFFECT\n    col = getSnowEffect();\n  #endif\n  return CCFragOutput(col);\n}\nvec4 getSnowEffect(){\n  float t = cc_time.x*0.01;\n  if(t>1.) t = 1.;\n  #if USE_OUT_PROGRESS\n      t = frozenProgress;\n  #endif\n  vec4 col_texture = texture(cc_spriteTexture,uv0);\n  col_texture.rgb+=(fillColor.rgb*t/2.);\n  return col_texture;\n}\nvec4 getCol(){\n  float t = mod(cc_time.x*0.01,0.5);\n  vec2 cp = vec2(0.5,0.5);\n  if((cp.x-uv0.x)*(cp.x-uv0.x) + (cp.y-uv0.y)*(cp.y-uv0.y)<t){\n    vec4 col1 =texture(cc_spriteTexture,uv0);\n    float strength = 1.;\n    vec4 col_texture = vec4((texture(cc_spriteTexture,uv0)*strength).rgb,1.);\n    col_texture.rgb+=(fillColor.rgb*strength/2.);\n    return col_texture;\n  }else{\n    return texture(cc_spriteTexture,uv0);\n  }\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform highp vec4 cc_time;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv0;\nvec4 getCol();\nvec4 getSnowEffect();\n   uniform vec4 fillColor;\n   uniform float frozenProgress;\nvec4 frag () {\n  vec4 col = getCol();\n  #if USE_SNOW_EFFECT\n    col = getSnowEffect();\n  #endif\n  return CCFragOutput(col);\n}\nvec4 getSnowEffect(){\n  float t = cc_time.x*0.01;\n  if(t>1.) t = 1.;\n  #if USE_OUT_PROGRESS\n      t = frozenProgress;\n  #endif\n  vec4 col_texture = texture2D(cc_spriteTexture,uv0);\n  col_texture.rgb+=(fillColor.rgb*t/2.);\n  return col_texture;\n}\nvec4 getCol(){\n  float t = mod(cc_time.x*0.01,0.5);\n  vec2 cp = vec2(0.5,0.5);\n  if((cp.x-uv0.x)*(cp.x-uv0.x) + (cp.y-uv0.y)*(cp.y-uv0.y)<t){\n    vec4 col1 =texture2D(cc_spriteTexture,uv0);\n    float strength = 1.;\n    vec4 col_texture = vec4((texture2D(cc_spriteTexture,uv0)*strength).rgb,1.);\n    col_texture.rgb+=(fillColor.rgb*strength/2.);\n    return col_texture;\n  }else{\n    return texture2D(cc_spriteTexture,uv0);\n  }\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_SNOW_EFFECT","type":"boolean"},{"name":"USE_OUT_PROGRESS","type":"boolean"}]}],[{"name":"game2d-shader","passes":[{"program":"../shader/mapFrozen|2dvs:vert|2dfs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"properties":{"mainColor":{"type":16,"value":[1,1,1,1]},"fillColor":{"type":16,"value":[1,0,0,1]},"frozenProgress":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[[1,"frozen111",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_SNOW_EFFECT":true,"USE_OUT_PROGRESS":true}],[[[{},"fillColor",8,[4,4294617600]]],11]]],0,0,[0],[0],[0]]]]
