[1,["74lx8+1s9NP5g3BIYUw87r"],["_effectAsset"],[["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,3,4],[1,0,1,2,4]],[[[[0,"selfFog",[{"rasterizerState":{},"depthStencilState":{"depthTest":false,"depthWrite":false},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainColor",8,[4,1976673091]]],11]]],0,0,[0],[0],[0]],[[[1,"../shader/selfFog",[{"hash":3565724999,"name":"../shader/selfFog|2dvs:vert|2dfs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nuniform sampler2D cc_spriteTexture;\nfloat randomNum(vec2 p)\n{\n  return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat randomNum(float x){\n  return fract(sin(x)* 43758.5453);\n}\nfloat valueNoise(vec2 p) {\n  vec2 w = floor(p);\n  vec2 k = fract(p);\n  k = k*k*(3.-2.*k);\n  float n = w.x*10. + w.y*48.;\n  float a = randomNum(n);\n  float b = randomNum(n+10.);\n  float c = randomNum(n+48.);\n  float d = randomNum(n+58.);\n  return mix(\n    mix(a, b, k.x),\n    mix(c, d, k.x),\n    k.y);\n}\nfloat fbm6( vec2 p ) {\n  const mat2 mtx = mat2( 0.80,  0.60, -0.60,  0.80 );\n  float f = 0.0;\n  f += 0.500000*valueNoise( p ); p = mtx*p*2.02;\n  f += 0.250000*valueNoise( p ); p = mtx*p*2.03;\n  f += 0.125000*valueNoise( p ); p = mtx*p*2.01;\n  f += 0.062500*valueNoise( p ); p = mtx*p*2.04;\n  f += 0.031250*valueNoise( p ); p = mtx*p*2.01;\n  f += 0.015625*valueNoise( p );\n  return f/0.96875;\n}\nin vec2 uv0;\nvec4 getFogCol();\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n};\nvec4 frag () {\n  vec4 col = mainColor * texture(cc_spriteTexture, uv0);\n  col = getFogCol();\n  return CCFragOutput(col);\n}\nvec4 getFogCol(){\n  float t = cc_time.x;\n  vec2 c1 = vec2(fbm6(uv0+0.55*t));\n  float f = fbm6(uv0+c1);\n  vec3 rgb = vec3(f);\n  rgb = mix(mainColor.rgb,rgb,0.6);\n  vec4 col = vec4(rgb,.8);\n  return col;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform highp vec4 cc_time;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nuniform sampler2D cc_spriteTexture;\nfloat randomNum(vec2 p)\n{\n  return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat randomNum(float x){\n  return fract(sin(x)* 43758.5453);\n}\nfloat valueNoise(vec2 p) {\n  vec2 w = floor(p);\n  vec2 k = fract(p);\n  k = k*k*(3.-2.*k);\n  float n = w.x*10. + w.y*48.;\n  float a = randomNum(n);\n  float b = randomNum(n+10.);\n  float c = randomNum(n+48.);\n  float d = randomNum(n+58.);\n  return mix(\n    mix(a, b, k.x),\n    mix(c, d, k.x),\n    k.y);\n}\nfloat fbm6( vec2 p ) {\n  const mat2 mtx = mat2( 0.80,  0.60, -0.60,  0.80 );\n  float f = 0.0;\n  f += 0.500000*valueNoise( p ); p = mtx*p*2.02;\n  f += 0.250000*valueNoise( p ); p = mtx*p*2.03;\n  f += 0.125000*valueNoise( p ); p = mtx*p*2.01;\n  f += 0.062500*valueNoise( p ); p = mtx*p*2.04;\n  f += 0.031250*valueNoise( p ); p = mtx*p*2.01;\n  f += 0.015625*valueNoise( p );\n  return f/0.96875;\n}\nvarying vec2 uv0;\nvec4 getFogCol();\n   uniform vec4 mainColor;\nvec4 frag () {\n  vec4 col = mainColor * texture2D(cc_spriteTexture, uv0);\n  col = getFogCol();\n  return CCFragOutput(col);\n}\nvec4 getFogCol(){\n  float t = cc_time.x;\n  vec2 c1 = vec2(fbm6(uv0+0.55*t));\n  float f = fbm6(uv0+c1);\n  vec3 rgb = vec3(f);\n  rgb = mix(mainColor.rgb,rgb,0.6);\n  vec4 col = vec4(rgb,.8);\n  return col;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":43}},"defines":[]}],[{"name":"game2d-shader","passes":[{"program":"../shader/selfFog|2dvs:vert|2dfs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"properties":{"mainColor":{"type":16,"value":[1,1,1,1]}}}]}]]],0,0,[],[],[]]]]
